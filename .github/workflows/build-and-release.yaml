name: Build and Release
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm install --no-package-lock
        
      - name: Create dist directory
        run: mkdir -p dist
        
      - name: Build
        run: |
          npm run clean
          npm run build
          
      - name: Remove export line
        run: |
          sed -i 's/export { GoogleCard };//' dist/google-card.js
          
      - name: Format CSS
        run: |
          # Create a perl script for formatting
          cat > format_css.pl << 'EOF'
          use strict;
          use warnings;
          
          my $file = 'dist/google-card.js';
          local @ARGV = ($file);
          local $^I = '';
          
          while (<>) {
              if (/css\(_templateObject\$\d+ \|\| \(_templateObject\$\d+ = _taggedTemplateLiteral\(\[/) {
                  my $line = $_;
                  my $css = '';
                  my $depth = 1;
                  
                  # Capture the opening of the template literal
                  $line =~ s/(css\(_templateObject\$\d+ \|\| \(_templateObject\$\d+ = _taggedTemplateLiteral\(\[) '/'$1\n          '/;
                  print $line;
                  
                  # Read until we find the matching closing bracket
                  while (<>) {
                      if (/\]\)\)\)/) {
                          # Format the closing line
                          s/^(\s*)'(\s*)\]\)\)\)/'          ' . "\n        ])))"/e;
                          print;
                          last;
                      } else {
                          # Format CSS content
                          s/\\n/\n          /g;  # Replace literal \n with newlines and indent
                          s/\\/\\\\/g;      # Escape backslashes
                          s/'/\\'/g;        # Escape single quotes
                          s/\s+$//;         # Remove trailing whitespace
                          
                          # Add proper line continuation
                          print "          '$_' +\n";
                      }
                  }
              } else {
                  print;
              }
          }
          EOF
          
          # Make the script executable
          chmod +x format_css.pl
          
          # Run the perl script
          perl format_css.pl
          
          # Clean up any potential syntax errors
          sed -i 's/\s*+\s*\]\)\)\)/\n        ])))/' dist/google-card.js
          sed -i 's/\s*+\s*$//' dist/google-card.js
          
      - name: Verify JavaScript Syntax
        run: |
          node -c dist/google-card.js
          
      - name: Commit dist
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          if [ -f "dist/google-card.js" ] && node -c dist/google-card.js; then
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add -f dist/google-card.js
            git commit -m "chore: update dist files" || echo "No changes to commit"
            git push
          else
            echo "dist/google-card.js not found or contains syntax errors"
            exit 1
          fi
          
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/google-card.js
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
