{"version":3,"file":"GoogleCard.js","sources":["../src/GoogleCard.js"],"sourcesContent":["import { LitElement, html } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\nimport { DEFAULT_CONFIG } from './constants';\nimport { sharedStyles } from './styles/SharedStyles';\nimport './components/BackgroundRotator';\nimport './components/Controls';\nimport './components/NightMode';\nimport './components/WeatherClock';\n\nexport class GoogleCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n      screenWidth: { type: Number },\n      screenHeight: { type: Number },\n      showDebugInfo: { type: Boolean },\n      showOverlay: { type: Boolean },\n      brightness: { type: Number },\n      visualBrightness: { type: Number },\n      showBrightnessCard: { type: Boolean },\n      brightnessCardTransition: { type: String },\n      isNightMode: { type: Boolean },\n      currentTime: { type: String },\n      isInNightMode: { type: Boolean },\n      isAdjustingBrightness: { type: Boolean },\n      lastBrightnessUpdateTime: { type: Number },\n    };\n  }\n\n  static get styles() {\n    return [sharedStyles];\n  }\n\n  constructor() {\n    super();\n    this.initializeProperties();\n    this.boundUpdateScreenSize = this.updateScreenSize.bind(this);\n  }\n\n  initializeProperties() {\n    this.showDebugInfo = false;\n    this.showOverlay = false;\n    this.isNightMode = false;\n    this.showBrightnessCard = false;\n    this.brightnessCardTransition = 'none';\n    this.isAdjustingBrightness = false;\n    this.lastBrightnessUpdateTime = 0;\n    this.updateScreenSize();\n  }\n\n  setConfig(config) {\n    if (!config.image_url) {\n      throw new Error('You need to define an image_url');\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    this.showDebugInfo = this.config.show_debug;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('resize', this.boundUpdateScreenSize);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener('resize', this.boundUpdateScreenSize);\n  }\n\n  updateScreenSize() {\n    const pixelRatio = window.devicePixelRatio || 1;\n    this.screenWidth = Math.round(window.innerWidth * pixelRatio);\n    this.screenHeight = Math.round(window.innerHeight * pixelRatio);\n  }\n\n  async handleBrightnessChange(newBrightness) {\n    await this.controls.updateBrightnessValue(newBrightness);\n  }\n\n  handleOverlayToggle(show) {\n    this.showOverlay = show;\n    this.requestUpdate();\n  }\n\n  handleBrightnessCardToggle(show) {\n    this.showBrightnessCard = show;\n    this.requestUpdate();\n  }\n\n  handleNightModeChange(isNightMode) {\n    this.isNightMode = isNightMode;\n    this.requestUpdate();\n  }\n\n  handleDebugToggle() {\n    this.showDebugInfo = !this.showDebugInfo;\n    this.requestUpdate();\n  }\n\n  render() {\n    if (this.isNightMode) {\n      return html` <night-mode .currentTime=${this.currentTime}></night-mode> `;\n    }\n\n    return html`\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Rubik:wght@300;400&display=swap\"\n        rel=\"stylesheet\"\n      />\n\n      <background-rotator\n        .hass=${this.hass}\n        .config=${this.config}\n        .screenWidth=${this.screenWidth}\n        .screenHeight=${this.screenHeight}\n        .showDebugInfo=${this.showDebugInfo}\n      ></background-rotator>\n\n      <weather-clock .hass=${this.hass}></weather-clock>\n\n      <controls\n        .hass=${this.hass}\n        .showOverlay=${this.showOverlay}\n        .showBrightnessCard=${this.showBrightnessCard}\n        .brightnessCardTransition=${this.brightnessCardTransition}\n        .brightness=${this.brightness}\n        .visualBrightness=${this.visualBrightness}\n        @brightnessChange=${(e) => this.handleBrightnessChange(e.detail)}\n        @overlayToggle=${(e) => this.handleOverlayToggle(e.detail)}\n        @brightnessCardToggle=${(e) => this.handleBrightnessCardToggle(e.detail)}\n        @debugToggle=${() => this.handleDebugToggle()}\n      ></controls>\n    `;\n  }\n}\n\ncustomElements.define('google-card', GoogleCard);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: 'google-card',\n  name: 'Google Card',\n  description: 'A Google Nest Hub-inspired card for Home Assistant',\n  preview: true,\n  documentationURL: 'https://github.com/liamtw22/google-card',\n});\n"],"names":["GoogleCard","LitElement","properties","hass","type","Object","config","screenWidth","Number","screenHeight","showDebugInfo","Boolean","showOverlay","brightness","visualBrightness","showBrightnessCard","brightnessCardTransition","String","isNightMode","currentTime","isInNightMode","isAdjustingBrightness","lastBrightnessUpdateTime","styles","sharedStyles","constructor","super","this","initializeProperties","boundUpdateScreenSize","updateScreenSize","bind","setConfig","image_url","Error","DEFAULT_CONFIG","show_debug","connectedCallback","window","addEventListener","disconnectedCallback","removeEventListener","pixelRatio","devicePixelRatio","Math","round","innerWidth","innerHeight","handleBrightnessChange","newBrightness","controls","updateBrightnessValue","handleOverlayToggle","show","requestUpdate","handleBrightnessCardToggle","handleNightModeChange","handleDebugToggle","render","html","e","detail","customElements","define","customCards","push","name","description","preview","documentationURL"],"mappings":";;;;;;;;;;;;;;AAQO,MAAMA,mBAAmBC;EAC9B,qBAAWC;IACT,OAAO;MACLC,MAAM;QAAEC,MAAMC;;MACdC,QAAQ;QAAEF,MAAMC;;MAChBE,aAAa;QAAEH,MAAMI;;MACrBC,cAAc;QAAEL,MAAMI;;MACtBE,eAAe;QAAEN,MAAMO;;MACvBC,aAAa;QAAER,MAAMO;;MACrBE,YAAY;QAAET,MAAMI;;MACpBM,kBAAkB;QAAEV,MAAMI;;MAC1BO,oBAAoB;QAAEX,MAAMO;;MAC5BK,0BAA0B;QAAEZ,MAAMa;;MAClCC,aAAa;QAAEd,MAAMO;;MACrBQ,aAAa;QAAEf,MAAMa;;MACrBG,eAAe;QAAEhB,MAAMO;;MACvBU,uBAAuB;QAAEjB,MAAMO;;MAC/BW,0BAA0B;QAAElB,MAAMI;;;AAErC;EAED,iBAAWe;IACT,OAAO,EAACC;AACT;EAED,WAAAC;IACEC,SACAC,KAAKC,wBACLD,KAAKE,wBAAwBF,KAAKG,iBAAiBC,KAAKJ;AACzD;EAED,oBAAAC;IACED,KAAKjB,iBAAgB,GACrBiB,KAAKf,eAAc,GACnBe,KAAKT,eAAc,GACnBS,KAAKZ,sBAAqB;IAC1BY,KAAKX,2BAA2B,QAChCW,KAAKN,yBAAwB,GAC7BM,KAAKL,2BAA2B;IAChCK,KAAKG;AACN;EAED,SAAAE,CAAU1B;IACR,KAAKA,OAAO2B,WACV,MAAM,IAAIC,MAAM;IAElBP,KAAKrB,SAAS;SAAK6B;SAAmB7B;OACtCqB,KAAKjB,gBAAgBiB,KAAKrB,OAAO8B;AAClC;EAED,iBAAAC;IACEX,MAAMW,qBACNC,OAAOC,iBAAiB,UAAUZ,KAAKE;AACxC;EAED,oBAAAW;IACEd,MAAMc,wBACNF,OAAOG,oBAAoB,UAAUd,KAAKE;AAC3C;EAED,gBAAAC;IACE,MAAMY,aAAaJ,OAAOK,oBAAoB;IAC9ChB,KAAKpB,cAAcqC,KAAKC,MAAMP,OAAOQ,aAAaJ,aAClDf,KAAKlB,eAAemC,KAAKC,MAAMP,OAAOS,cAAcL;AACrD;EAED,4BAAMM,CAAuBC;UACrBtB,KAAKuB,SAASC,sBAAsBF;AAC3C;EAED,mBAAAG,CAAoBC;IAClB1B,KAAKf,cAAcyC,MACnB1B,KAAK2B;AACN;EAED,0BAAAC,CAA2BF;IACzB1B,KAAKZ,qBAAqBsC,MAC1B1B,KAAK2B;AACN;EAED,qBAAAE,CAAsBtC;IACpBS,KAAKT,cAAcA,aACnBS,KAAK2B;AACN;EAED,iBAAAG;IACE9B,KAAKjB,iBAAiBiB,KAAKjB,eAC3BiB,KAAK2B;AACN;EAED,MAAAI;IACE,OAAI/B,KAAKT,cACAyC,IAAI,6BAA6BhC,KAAKR,+BAGxCwC,IAAI;;;;;;;gBAOChC,KAAKxB;kBACHwB,KAAKrB;uBACAqB,KAAKpB;wBACJoB,KAAKlB;yBACJkB,KAAKjB;;;6BAGDiB,KAAKxB;;;gBAGlBwB,KAAKxB;uBACEwB,KAAKf;8BACEe,KAAKZ;oCACCY,KAAKX;sBACnBW,KAAKd;4BACCc,KAAKb;4BACJ8C,KAAMjC,KAAKqB,uBAAuBY,EAAEC;yBACvCD,KAAMjC,KAAKyB,oBAAoBQ,EAAEC;gCAC1BD,KAAMjC,KAAK4B,2BAA2BK,EAAEC;uBAClD,MAAMlC,KAAK8B;;;AAG/B;;;AAGHK,eAAeC,OAAO,eAAe/D,aAErCsC,OAAO0B,cAAc1B,OAAO0B,eAAe;AAC3C1B,OAAO0B,YAAYC,KAAK;EACtB7D,MAAM;EACN8D,MAAM;EACNC,aAAa;EACbC,UAAS;EACTC,kBAAkB;;;"}