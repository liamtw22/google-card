{"version":3,"file":"GoogleCard.js","sources":["../src/constants.js","../src/styles/SharedStyles.js","../src/styles/BackgroundRotatorStyles.js","../src/components/BackgroundRotator.js","../src/styles/ControlsStyles.js","../src/components/Controls.js","../src/styles/NightModeStyles.js","../src/components/NightMode.js","../src/styles/WeatherClockStyles.js","../src/components/WeatherClock.js","../src/GoogleCard.js"],"sourcesContent":["export const OVERLAY_DISMISS_TIMEOUT = 10000;\nexport const LONG_PRESS_TIMEOUT = 1000;\nexport const NIGHT_MODE_TRANSITION_DELAY = 100;\nexport const TRANSITION_BUFFER = 50;\nexport const DEFAULT_BRIGHTNESS = 128;\nexport const MAX_BRIGHTNESS = 255;\nexport const MIN_BRIGHTNESS = 1;\nexport const SWIPE_THRESHOLD = 50;\nexport const DEFAULT_SENSOR_UPDATE_DELAY = 500;\nexport const BRIGHTNESS_DEBOUNCE_DELAY = 250;\nexport const BRIGHTNESS_STABILIZE_DELAY = 2000;\n\nexport const DEFAULT_CONFIG = {\n  image_url: '',\n  display_time: 15,\n  crossfade_time: 3,\n  image_fit: 'contain',\n  image_list_update_interval: 3600,\n  image_order: 'sorted',\n  show_debug: false,\n  sensor_update_delay: DEFAULT_SENSOR_UPDATE_DELAY,\n};\n\nexport const IMAGE_SOURCE_TYPES = {\n  MEDIA_SOURCE: 'media-source',\n  UNSPLASH_API: 'unsplash-api',\n  IMMICH_API: 'immich-api',\n  PICSUM: 'picsum',\n  URL: 'url',\n};\n","// src/styles/SharedStyles.js\nimport { css } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\n\nexport const sharedStyles = css`\n  :host {\n    --crossfade-time: 3s;\n    --overlay-height: 120px;\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    z-index: 1;\n    font-family: 'Product Sans Regular', sans-serif;\n    font-weight: 400;\n  }\n`;\n","// src/styles/BackgroundRotatorStyles.js\nimport { css } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\n\nexport const backgroundRotatorStyles = css`\n  .background-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n  }\n\n  .background-image {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n    transition: opacity var(--crossfade-time) ease-in-out;\n  }\n\n  .error {\n    color: red;\n    padding: 16px;\n  }\n\n  .debug-info {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 16px;\n    font-size: 14px;\n    z-index: 10;\n    max-width: 80%;\n    max-height: 80%;\n    overflow: auto;\n    border-radius: 8px;\n  }\n`;\n","// src/components/BackgroundRotator.js\nimport { LitElement, html } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\nimport { backgroundRotatorStyles } from '../styles/BackgroundRotatorStyles';\nimport { sharedStyles } from '../styles/SharedStyles';\nimport { TRANSITION_BUFFER, IMAGE_SOURCE_TYPES } from '../constants';\n\nexport class BackgroundRotator extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n      screenWidth: { type: Number },\n      screenHeight: { type: Number },\n      showDebugInfo: { type: Boolean },\n      currentImageIndex: { type: Number },\n      imageList: { type: Array },\n      imageA: { type: String },\n      imageB: { type: String },\n      activeImage: { type: String },\n      preloadedImage: { type: String },\n      error: { type: String },\n      debugInfo: { type: Object },\n      isTransitioning: { type: Boolean },\n    };\n  }\n\n  static get styles() {\n    return [backgroundRotatorStyles, sharedStyles];\n  }\n\n  constructor() {\n    super();\n    this.initializeProperties();\n  }\n\n  initializeProperties() {\n    this.currentImageIndex = -1;\n    this.imageList = [];\n    this.imageA = '';\n    this.imageB = '';\n    this.activeImage = 'A';\n    this.preloadedImage = '';\n    this.error = null;\n    this.debugInfo = {};\n    this.isTransitioning = false;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.startImageRotation();\n    this.startImageListUpdates();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.clearTimers();\n  }\n\n  clearTimers() {\n    clearInterval(this.imageUpdateInterval);\n    clearInterval(this.imageListUpdateInterval);\n  }\n\n  startImageListUpdates() {\n    this.updateImageList();\n    this.imageListUpdateInterval = setInterval(() => {\n      this.updateImageList();\n    }, this.config.image_list_update_interval * 1000);\n  }\n\n  startImageRotation() {\n    this.updateImage();\n    this.imageUpdateInterval = setInterval(() => {\n      this.updateImage();\n    }, this.config.display_time * 1000);\n  }\n\n  getImageSourceType() {\n    const { image_url } = this.config;\n    if (image_url.startsWith('media-source://')) return IMAGE_SOURCE_TYPES.MEDIA_SOURCE;\n    if (image_url.startsWith('https://api.unsplash')) return IMAGE_SOURCE_TYPES.UNSPLASH_API;\n    if (image_url.startsWith('immich+')) return IMAGE_SOURCE_TYPES.IMMICH_API;\n    if (image_url.includes('picsum.photos')) return IMAGE_SOURCE_TYPES.PICSUM;\n    return IMAGE_SOURCE_TYPES.URL;\n  }\n\n  getImageUrl() {\n    const timestamp_ms = Date.now();\n    const timestamp = Math.floor(timestamp_ms / 1000);\n    return this.config.image_url\n      .replace(/\\${width}/g, this.screenWidth)\n      .replace(/\\${height}/g, this.screenHeight)\n      .replace(/\\${timestamp_ms}/g, timestamp_ms)\n      .replace(/\\${timestamp}/g, timestamp);\n  }\n\n  async updateImageList() {\n    if (!this.screenWidth || !this.screenHeight) {\n      this.error = 'Screen dimensions not set';\n      this.requestUpdate();\n      return;\n    }\n\n    try {\n      const newImageList = await this.fetchImageList();\n      this.imageList =\n        this.config.image_order === 'random'\n          ? newImageList.sort(() => 0.5 - Math.random())\n          : newImageList.sort();\n\n      this.error = null;\n      this.debugInfo.imageList = this.imageList;\n    } catch (error) {\n      this.error = `Error updating image list: ${error.message}`;\n    }\n    this.requestUpdate();\n  }\n\n  async fetchImageList() {\n    const sourceType = this.getImageSourceType();\n    switch (sourceType) {\n      case IMAGE_SOURCE_TYPES.MEDIA_SOURCE:\n        return this.getImagesFromMediaSource();\n      case IMAGE_SOURCE_TYPES.UNSPLASH_API:\n        return this.getImagesFromUnsplashAPI();\n      case IMAGE_SOURCE_TYPES.IMMICH_API:\n        return this.getImagesFromImmichAPI();\n      default:\n        return [this.getImageUrl()];\n    }\n  }\n\n  async getImagesFromMediaSource() {\n    try {\n      const mediaContentId = this.config.image_url.replace(/^media-source:\\/\\//, '');\n      const result = await this.hass.callWS({\n        type: 'media_source/browse_media',\n        media_content_id: mediaContentId,\n      });\n      return result.children\n        .filter((child) => child.media_class === 'image')\n        .map((child) => child.media_content_id);\n    } catch (error) {\n      console.error('Error fetching images from media source:', error);\n      return [this.getImageUrl()];\n    }\n  }\n\n  async getImagesFromUnsplashAPI() {\n    try {\n      const response = await fetch(`${this.config.image_url}&count=30`);\n      const data = await response.json();\n      return data.map((image) => image.urls.regular);\n    } catch (error) {\n      console.error('Error fetching images from Unsplash API:', error);\n      return [this.getImageUrl()];\n    }\n  }\n\n  async getImagesFromImmichAPI() {\n    try {\n      const apiUrl = this.config.image_url.replace(/^immich\\+/, '');\n      const response = await fetch(`${apiUrl}/albums`, {\n        headers: {\n          'x-api-key': this.config.immich_api_key,\n        },\n      });\n      const albums = await response.json();\n\n      const imagePromises = albums.map(async (album) => {\n        const albumResponse = await fetch(`${apiUrl}/albums/${album.id}`, {\n          headers: {\n            'x-api-key': this.config.immich_api_key,\n          },\n        });\n        const albumData = await albumResponse.json();\n        return albumData.assets\n          .filter((asset) => asset.type === 'IMAGE')\n          .map((asset) => `${apiUrl}/assets/${asset.id}/original`);\n      });\n\n      return (await Promise.all(imagePromises)).flat();\n    } catch (error) {\n      console.error('Error fetching images from Immich API:', error);\n      return [this.getImageUrl()];\n    }\n  }\n\n  async preloadImage(url) {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => resolve(url);\n      img.onerror = () => reject(new Error(`Failed to load image: ${url}`));\n      img.src = url;\n    });\n  }\n\n  async preloadNextImage() {\n    const nextImageToPreload =\n      this.getImageSourceType() === IMAGE_SOURCE_TYPES.PICSUM\n        ? this.getImageUrl()\n        : this.imageList[(this.currentImageIndex + 1) % this.imageList.length];\n\n    try {\n      this.preloadedImage = await this.preloadImage(nextImageToPreload);\n    } catch (error) {\n      console.error('Error preloading next image:', error);\n      this.preloadedImage = '';\n    }\n  }\n\n  async getNextImage() {\n    let newImage;\n    if (this.preloadedImage) {\n      newImage = this.preloadedImage;\n      this.preloadedImage = '';\n    } else {\n      if (this.getImageSourceType() === IMAGE_SOURCE_TYPES.PICSUM) {\n        newImage = this.getImageUrl();\n      } else {\n        this.currentImageIndex = (this.currentImageIndex + 1) % this.imageList.length;\n        newImage = this.imageList[this.currentImageIndex];\n      }\n      newImage = await this.preloadImage(newImage);\n    }\n    return newImage;\n  }\n\n  async updateImage() {\n    if (this.isTransitioning) return;\n\n    try {\n      const newImage = await this.getNextImage();\n      await this.transitionToNewImage(newImage);\n      this.preloadNextImage();\n    } catch (error) {\n      console.error('Error updating image:', error);\n    }\n  }\n\n  async transitionToNewImage(newImage) {\n    this.isTransitioning = true;\n\n    if (this.activeImage === 'A') {\n      this.imageB = newImage;\n    } else {\n      this.imageA = newImage;\n    }\n\n    this.updateDebugInfo();\n    this.requestUpdate();\n\n    await new Promise((resolve) => setTimeout(resolve, TRANSITION_BUFFER));\n    this.activeImage = this.activeImage === 'A' ? 'B' : 'A';\n    this.requestUpdate();\n\n    await new Promise((resolve) =>\n      setTimeout(resolve, this.config.crossfade_time * 1000 + TRANSITION_BUFFER)\n    );\n    this.isTransitioning = false;\n  }\n\n  updateDebugInfo() {\n    this.debugInfo = {\n      imageA: this.imageA,\n      imageB: this.imageB,\n      activeImage: this.activeImage,\n      preloadedImage: this.preloadedImage,\n      imageList: this.imageList,\n      currentImageIndex: this.currentImageIndex,\n      config: this.config,\n      error: this.error,\n    };\n  }\n\n  renderBackgroundImages() {\n    const imageAOpacity = this.activeImage === 'A' ? 1 : 0;\n    const imageBOpacity = this.activeImage === 'B' ? 1 : 0;\n\n    return html`\n      <div class=\"background-container\">\n        <div\n          class=\"background-image\"\n          style=\"background-image: url('${this.imageA}'); \n                    opacity: ${imageAOpacity};\"\n        ></div>\n        <div\n          class=\"background-image\"\n          style=\"background-image: url('${this.imageB}'); \n                    opacity: ${imageBOpacity};\"\n        ></div>\n      </div>\n    `;\n  }\n\n  renderDebugInfo() {\n    return html`\n      <div class=\"debug-info\">\n        <h2>Background Rotator Debug Info</h2>\n        <p><strong>Screen Width:</strong> ${this.screenWidth}</p>\n        <p><strong>Screen Height:</strong> ${this.screenHeight}</p>\n        <p><strong>Device Pixel Ratio:</strong> ${window.devicePixelRatio || 1}</p>\n        <p><strong>Image A:</strong> ${this.imageA}</p>\n        <p><strong>Image B:</strong> ${this.imageB}</p>\n        <p><strong>Active Image:</strong> ${this.activeImage}</p>\n        <p><strong>Preloaded Image:</strong> ${this.preloadedImage}</p>\n        <p><strong>Is Transitioning:</strong> ${this.isTransitioning}</p>\n        <p><strong>Current Image Index:</strong> ${this.currentImageIndex}</p>\n        <p><strong>Error:</strong> ${this.error}</p>\n        <h3>Image List:</h3>\n        <pre>${JSON.stringify(this.imageList, null, 2)}</pre>\n        <h3>Config:</h3>\n        <pre>${JSON.stringify(this.config, null, 2)}</pre>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`\n      ${this.renderBackgroundImages()}\n      ${this.error ? html`<div class=\"error\">${this.error}</div>` : ''}\n      ${this.showDebugInfo ? this.renderDebugInfo() : ''}\n    `;\n  }\n}\n\ncustomElements.define('background-rotator', BackgroundRotator);\n","// src/styles/ControlsStyles.js\nimport { css } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\n\nexport const controlsStyles = css`\n  .overlay {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: var(--overlay-height);\n    background-color: rgba(255, 255, 255, 0.95);\n    color: #333;\n    box-sizing: border-box;\n    transition: transform 0.3s ease-in-out;\n    transform: translateY(100%);\n    z-index: 4;\n    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-top-left-radius: 20px;\n    border-top-right-radius: 20px;\n  }\n\n  .overlay.show {\n    transform: translateY(0);\n  }\n\n  .icon-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .icon-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 85%;\n  }\n\n  .icon-button {\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #333;\n    padding: 10px;\n    border-radius: 50%;\n    transition: background-color 0.3s ease;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .icon-button:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n\n  .brightness-card {\n    position: fixed;\n    bottom: 20px;\n    left: 20px;\n    right: 20px;\n    background-color: rgba(255, 255, 255, 0.95);\n    border-radius: 20px;\n    padding: 40px 20px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    z-index: 3;\n    transform: translateY(calc(100% + 20px));\n    transition: transform 0.3s ease-in-out;\n  }\n\n  .brightness-card.show {\n    transform: translateY(0);\n  }\n\n  .brightness-control {\n    display: flex;\n    align-items: center;\n    width: 100%;\n  }\n\n  .brightness-dots-container {\n    flex-grow: 1;\n    margin-right: 10px;\n    padding: 0 10px;\n  }\n\n  .brightness-dots {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 30px;\n  }\n\n  .brightness-dot {\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: #d1d1d1;\n    transition: background-color 0.2s ease;\n    cursor: pointer;\n  }\n\n  .brightness-dot.active {\n    background-color: #333;\n  }\n\n  .brightness-value {\n    min-width: 60px;\n    text-align: right;\n    font-size: 40px;\n    color: black;\n    font-weight: 300;\n    margin-right: 20px;\n  }\n\n  iconify-icon {\n    font-size: 50px;\n    display: block;\n    width: 50px;\n    height: 50px;\n  }\n`;\n","// src/components/Controls.js\nimport { LitElement, html } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\nimport { controlsStyles } from '../styles/ControlsStyles';\nimport { sharedStyles } from '../styles/SharedStyles';\nimport {\n  OVERLAY_DISMISS_TIMEOUT,\n  LONG_PRESS_TIMEOUT,\n  BRIGHTNESS_DEBOUNCE_DELAY,\n  BRIGHTNESS_STABILIZE_DELAY,\n  MIN_BRIGHTNESS,\n  MAX_BRIGHTNESS,\n  SWIPE_THRESHOLD,\n  DEFAULT_SENSOR_UPDATE_DELAY,\n} from '../constants';\n\nexport class Controls extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      showOverlay: { type: Boolean },\n      showBrightnessCard: { type: Boolean },\n      brightnessCardTransition: { type: String },\n      brightness: { type: Number },\n      visualBrightness: { type: Number },\n      isAdjustingBrightness: { type: Boolean },\n      touchStartY: { type: Number },\n      lastBrightnessUpdateTime: { type: Number },\n    };\n  }\n\n  static get styles() {\n    return [controlsStyles, sharedStyles];\n  }\n\n  constructor() {\n    super();\n    this.initializeProperties();\n    this.setupEventListeners();\n  }\n\n  initializeProperties() {\n    this.showOverlay = false;\n    this.showBrightnessCard = false;\n    this.brightnessCardTransition = 'none';\n    this.brightness = 128;\n    this.visualBrightness = 128;\n    this.isAdjustingBrightness = false;\n    this.lastBrightnessUpdateTime = 0;\n  }\n\n  setupEventListeners() {\n    this.addEventListener('touchstart', this.handleTouchStart.bind(this));\n    this.addEventListener('touchmove', this.handleTouchMove.bind(this));\n    this.addEventListener('touchend', this.handleTouchEnd.bind(this));\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.clearAllTimers();\n  }\n\n  clearAllTimers() {\n    this.clearOverlayDismissTimer();\n    this.clearBrightnessCardDismissTimer();\n    if (this.brightnessUpdateTimer) {\n      clearTimeout(this.brightnessUpdateTimer);\n    }\n    if (this.brightnessStabilizeTimer) {\n      clearTimeout(this.brightnessStabilizeTimer);\n    }\n    if (this.longPressTimer) {\n      clearTimeout(this.longPressTimer);\n    }\n  }\n\n  // Touch Event Handlers\n  handleTouchStart(event) {\n    event.preventDefault();\n    this.touchStartY = event.touches[0].clientY;\n  }\n\n  handleTouchMove(event) {\n    event.preventDefault();\n  }\n\n  handleTouchEnd(event) {\n    const deltaY = this.touchStartY - event.changedTouches[0].clientY;\n\n    if (deltaY > SWIPE_THRESHOLD && !this.showBrightnessCard) {\n      this.showOverlay = true;\n      this.dispatchEvent(new CustomEvent('overlayToggle', { detail: true }));\n      this.startOverlayDismissTimer();\n    } else if (deltaY < -SWIPE_THRESHOLD) {\n      this.showBrightnessCard ? this.dismissBrightnessCard() : this.dismissOverlay();\n    }\n  }\n\n  // Timer Management\n  startOverlayDismissTimer() {\n    this.clearOverlayDismissTimer();\n    this.overlayDismissTimer = setTimeout(() => {\n      this.dismissOverlay();\n    }, OVERLAY_DISMISS_TIMEOUT);\n  }\n\n  clearOverlayDismissTimer() {\n    if (this.overlayDismissTimer) {\n      clearTimeout(this.overlayDismissTimer);\n      this.overlayDismissTimer = null;\n    }\n  }\n\n  startBrightnessCardDismissTimer() {\n    this.clearBrightnessCardDismissTimer();\n    this.brightnessCardDismissTimer = setTimeout(() => {\n      this.dismissBrightnessCard();\n    }, OVERLAY_DISMISS_TIMEOUT);\n  }\n\n  clearBrightnessCardDismissTimer() {\n    if (this.brightnessCardDismissTimer) {\n      clearTimeout(this.brightnessCardDismissTimer);\n      this.brightnessCardDismissTimer = null;\n    }\n  }\n\n  // UI State Management\n  dismissOverlay() {\n    this.showOverlay = false;\n    this.clearOverlayDismissTimer();\n    this.dispatchEvent(new CustomEvent('overlayToggle', { detail: false }));\n  }\n\n  toggleBrightnessCard() {\n    if (!this.showBrightnessCard) {\n      this.showOverlay = false;\n      this.brightnessCardTransition = 'none';\n      this.showBrightnessCard = true;\n      this.dispatchEvent(new CustomEvent('overlayToggle', { detail: false }));\n      this.dispatchEvent(new CustomEvent('brightnessCardToggle', { detail: true }));\n      this.startBrightnessCardDismissTimer();\n    } else {\n      this.dismissBrightnessCard();\n    }\n  }\n\n  dismissBrightnessCard() {\n    this.brightnessCardTransition = 'transform 0.3s ease-in-out';\n    this.showBrightnessCard = false;\n    this.clearBrightnessCardDismissTimer();\n    this.dispatchEvent(new CustomEvent('brightnessCardToggle', { detail: false }));\n  }\n\n  // Brightness Control\n  async handleBrightnessChange(e) {\n    const clickedDot = e.target.closest('.brightness-dot');\n    if (!clickedDot) return;\n\n    const newBrightness = parseInt(clickedDot.dataset.value);\n    await this.updateBrightnessValue(newBrightness * 25.5);\n  }\n\n  async handleBrightnessDrag(e) {\n    const container = this.shadowRoot.querySelector('.brightness-dots');\n    const rect = container.getBoundingClientRect();\n    const x = e.type.includes('touch') ? e.touches[0].clientX : e.clientX;\n    const relativeX = Math.max(0, Math.min(x - rect.left, rect.width));\n    const newValue = Math.round((relativeX / rect.width) * 10);\n    await this.updateBrightnessValue(newValue * 25.5);\n  }\n\n  async updateBrightnessValue(value) {\n    this.isAdjustingBrightness = true;\n    this.visualBrightness = Math.max(MIN_BRIGHTNESS, Math.min(MAX_BRIGHTNESS, Math.round(value)));\n    this.dispatchEvent(new CustomEvent('brightnessChange', { detail: this.visualBrightness }));\n\n    if (this.brightnessUpdateTimer) {\n      clearTimeout(this.brightnessUpdateTimer);\n    }\n    if (this.brightnessStabilizeTimer) {\n      clearTimeout(this.brightnessStabilizeTimer);\n    }\n\n    this.brightnessUpdateTimer = setTimeout(async () => {\n      await this.setBrightness(value);\n      this.lastBrightnessUpdateTime = Date.now();\n\n      this.brightnessStabilizeTimer = setTimeout(() => {\n        this.isAdjustingBrightness = false;\n      }, BRIGHTNESS_STABILIZE_DELAY);\n    }, BRIGHTNESS_DEBOUNCE_DELAY);\n  }\n\n  async setBrightness(value) {\n    const internalValue = Math.max(MIN_BRIGHTNESS, Math.min(MAX_BRIGHTNESS, Math.round(value)));\n\n    try {\n      await this.hass.callService('notify', 'mobile_app_liam_s_room_display', {\n        message: 'command_screen_brightness_level',\n        data: {\n          command: internalValue,\n        },\n      });\n\n      await this.hass.callService('notify', 'mobile_app_liam_s_room_display', {\n        message: 'command_update_sensors',\n      });\n\n      await new Promise((resolve) => setTimeout(resolve, DEFAULT_SENSOR_UPDATE_DELAY));\n\n      this.brightness = internalValue;\n    } catch (error) {\n      console.error('Error setting brightness:', error);\n      this.visualBrightness = this.brightness;\n    }\n\n    this.startBrightnessCardDismissTimer();\n  }\n\n  // Debug Toggle\n  handleSettingsIconTouchStart() {\n    this.longPressTimer = setTimeout(() => {\n      this.dispatchEvent(new CustomEvent('debugToggle'));\n    }, LONG_PRESS_TIMEOUT);\n  }\n\n  handleSettingsIconTouchEnd() {\n    if (this.longPressTimer) {\n      clearTimeout(this.longPressTimer);\n    }\n  }\n\n  getBrightnessDisplayValue() {\n    return Math.round(this.visualBrightness / 25.5);\n  }\n\n  // Render Methods\n  renderOverlay() {\n    return html`\n      <div class=\"overlay ${this.showOverlay ? 'show' : ''}\">\n        <div class=\"icon-container\">\n          <div class=\"icon-row\">\n            <button class=\"icon-button\" @click=\"${this.toggleBrightnessCard}\">\n              <iconify-icon icon=\"material-symbols-light:sunny-outline-rounded\"></iconify-icon>\n            </button>\n            <button class=\"icon-button\">\n              <iconify-icon icon=\"material-symbols-light:volume-up-outline-rounded\"></iconify-icon>\n            </button>\n            <button class=\"icon-button\">\n              <iconify-icon\n                icon=\"material-symbols-light:do-not-disturb-on-outline-rounded\"\n              ></iconify-icon>\n            </button>\n            <button class=\"icon-button\">\n              <iconify-icon icon=\"material-symbols-light:alarm-add-outline-rounded\"></iconify-icon>\n            </button>\n            <button\n              class=\"icon-button\"\n              @touchstart=\"${this.handleSettingsIconTouchStart}\"\n              @touchend=\"${this.handleSettingsIconTouchEnd}\"\n              @touchcancel=\"${this.handleSettingsIconTouchEnd}\"\n            >\n              <iconify-icon icon=\"material-symbols-light:settings-outline-rounded\"></iconify-icon>\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  renderBrightnessCard() {\n    const brightnessDisplayValue = this.getBrightnessDisplayValue();\n    return html`\n      <div\n        class=\"brightness-card ${this.showBrightnessCard ? 'show' : ''}\"\n        style=\"transition: ${this.brightnessCardTransition};\"\n      >\n        <div class=\"brightness-control\">\n          <div class=\"brightness-dots-container\">\n            <div\n              class=\"brightness-dots\"\n              @click=\"${this.handleBrightnessChange}\"\n              @mousedown=\"${this.handleBrightnessDrag}\"\n              @mousemove=\"${(e) => e.buttons === 1 && this.handleBrightnessDrag(e)}\"\n              @touchstart=\"${this.handleBrightnessDrag}\"\n              @touchmove=\"${this.handleBrightnessDrag}\"\n            >\n              ${[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(\n                (value) => html`\n                  <div\n                    class=\"brightness-dot ${value <= brightnessDisplayValue ? 'active' : ''}\"\n                    data-value=\"${value}\"\n                  ></div>\n                `\n              )}\n            </div>\n          </div>\n          <span class=\"brightness-value\">${brightnessDisplayValue}</span>\n        </div>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Rubik:wght@300;400&display=swap\"\n        rel=\"stylesheet\"\n      />\n      ${!this.showBrightnessCard ? this.renderOverlay() : ''} ${this.renderBrightnessCard()}\n    `;\n  }\n}\n\ncustomElements.define('google-controls', Controls);\n","// src/styles/NightModeStyles.js\nimport { css } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\n\nexport const nightModeStyles = css`\n  .night-mode {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 5;\n  }\n\n  .night-time {\n    color: white;\n    font-size: 35vw;\n    font-weight: 400;\n    font-family: 'Product Sans Regular', sans-serif;\n  }\n`;\n","// src/components/NightMode.js\nimport { LitElement, html } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\nimport { nightModeStyles } from '../styles/NightModeStyles';\nimport { sharedStyles } from '../styles/SharedStyles';\nimport {\n  NIGHT_MODE_TRANSITION_DELAY,\n  MIN_BRIGHTNESS,\n  DEFAULT_SENSOR_UPDATE_DELAY,\n} from '../constants';\n\nexport class NightMode extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      currentTime: { type: String },\n      brightness: { type: Number },\n      isInNightMode: { type: Boolean },\n      previousBrightness: { type: Number },\n    };\n  }\n\n  static get styles() {\n    return [sharedStyles, nightModeStyles];\n  }\n\n  constructor() {\n    super();\n    this.initializeProperties();\n    this.timeUpdateInterval = null;\n  }\n\n  initializeProperties() {\n    this.currentTime = '';\n    this.brightness = MIN_BRIGHTNESS;\n    this.isInNightMode = false;\n    this.previousBrightness = MIN_BRIGHTNESS;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.updateTime();\n    this.startTimeUpdates();\n    this.enterNightMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this.timeUpdateInterval) {\n      clearInterval(this.timeUpdateInterval);\n    }\n  }\n\n  startTimeUpdates() {\n    this.timeUpdateInterval = setInterval(() => {\n      this.updateTime();\n    }, 1000);\n  }\n\n  updateTime() {\n    const now = new Date();\n    this.currentTime = now\n      .toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true,\n      })\n      .replace(/\\s?[AP]M/, '');\n  }\n\n  async enterNightMode() {\n    if (this.isInNightMode) return;\n\n    try {\n      await this.toggleAutoBrightness(false);\n      await new Promise((resolve) => setTimeout(resolve, NIGHT_MODE_TRANSITION_DELAY));\n      await this.setBrightness(MIN_BRIGHTNESS);\n      await new Promise((resolve) => setTimeout(resolve, NIGHT_MODE_TRANSITION_DELAY));\n      await this.toggleAutoBrightness(true);\n\n      this.isInNightMode = true;\n      this.requestUpdate();\n    } catch (error) {\n      console.error('Error entering night mode:', error);\n    }\n  }\n\n  async exitNightMode() {\n    if (!this.isInNightMode) return;\n\n    try {\n      await this.toggleAutoBrightness(false);\n      await new Promise((resolve) => setTimeout(resolve, NIGHT_MODE_TRANSITION_DELAY));\n      await this.setBrightness(this.previousBrightness);\n\n      this.isInNightMode = false;\n      this.requestUpdate();\n\n      // Dispatch event to notify parent that night mode has ended\n      this.dispatchEvent(new CustomEvent('nightModeExit'));\n    } catch (error) {\n      console.error('Error exiting night mode:', error);\n    }\n  }\n\n  async setBrightness(value) {\n    if (!this.hass) return;\n\n    try {\n      await this.hass.callService('notify', 'mobile_app_liam_s_room_display', {\n        message: 'command_screen_brightness_level',\n        data: {\n          command: value,\n        },\n      });\n\n      await this.hass.callService('notify', 'mobile_app_liam_s_room_display', {\n        message: 'command_update_sensors',\n      });\n\n      await new Promise((resolve) => setTimeout(resolve, DEFAULT_SENSOR_UPDATE_DELAY));\n\n      this.brightness = value;\n      this.requestUpdate();\n    } catch (error) {\n      console.error('Error setting brightness:', error);\n    }\n  }\n\n  async toggleAutoBrightness(enabled) {\n    if (!this.hass) return;\n\n    try {\n      await this.hass.callService('notify', 'mobile_app_liam_s_room_display', {\n        message: 'command_auto_screen_brightness',\n        data: {\n          command: enabled ? 'turn_on' : 'turn_off',\n        },\n      });\n    } catch (error) {\n      console.error('Error toggling auto brightness:', error);\n    }\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('hass')) {\n      this.checkLightSensor();\n    }\n  }\n\n  checkLightSensor() {\n    if (!this.hass?.states['sensor.liam_room_display_light_sensor']) return;\n\n    const lightSensor = this.hass.states['sensor.liam_room_display_light_sensor'];\n    const shouldBeInNightMode = parseInt(lightSensor.state) === 0;\n\n    if (shouldBeInNightMode && !this.isInNightMode) {\n      this.previousBrightness = this.brightness;\n      this.enterNightMode();\n    } else if (!shouldBeInNightMode && this.isInNightMode) {\n      this.exitNightMode();\n    }\n  }\n\n  render() {\n    return html`\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Rubik:wght@300;400&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <div class=\"night-mode\">\n        <div class=\"night-time\">${this.currentTime}</div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('night-mode', NightMode);\n","// src/styles/WeatherClockStyles.js\nimport { css } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\n\nexport const weatherClockStyles = css`\n  .weather-component {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: white;\n    font-family: 'Product Sans Regular', sans-serif;\n    width: 100%;\n    max-width: 400px;\n  }\n\n  .left-column {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .right-column {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n\n  .date {\n    font-size: 25px;\n    margin-bottom: 5px;\n    font-weight: 400;\n    margin-left: 10px;\n    text-shadow: 0 2px 3px rgba(0, 0, 0, 0.5);\n  }\n\n  .time {\n    font-size: 90px;\n    line-height: 1;\n    font-weight: 500;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\n  }\n\n  .weather-info {\n    display: flex;\n    align-items: center;\n    margin-top: 10px;\n    font-weight: 500;\n    margin-right: -5px;\n  }\n\n  .weather-icon {\n    width: 50px;\n    height: 50px;\n  }\n\n  .temperature {\n    font-size: 35px;\n    font-weight: 500;\n    text-shadow: 0 2px 3px rgba(0, 0, 0, 0.5);\n  }\n\n  .aqi {\n    font-size: 20px;\n    padding: 5px 10px;\n    border-radius: 6px;\n    font-weight: 500;\n    margin-top: 5px;\n    margin-left: 30px;\n    align-self: flex-end;\n    min-width: 60px;\n    text-align: center;\n  }\n`;\n","// src/components/WeatherClock.js\nimport { LitElement, html } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\nimport { weatherClockStyles } from '../styles/WeatherClockStyles';\nimport { sharedStyles } from '../styles/SharedStyles';\n\nexport class WeatherClock extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      date: { type: String },\n      time: { type: String },\n      temperature: { type: String },\n      weatherIcon: { type: String },\n      aqi: { type: String },\n    };\n  }\n\n  static get styles() {\n    return [weatherClockStyles, sharedStyles];\n  }\n\n  constructor() {\n    super();\n    this.resetProperties();\n    this.updateTimer = null;\n  }\n\n  resetProperties() {\n    this.date = '';\n    this.time = '';\n    this.temperature = '';\n    this.weatherIcon = '';\n    this.aqi = '';\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.updateWeather();\n    this.scheduleUpdate();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this.updateTimer) {\n      clearTimeout(this.updateTimer);\n    }\n  }\n\n  scheduleUpdate() {\n    const now = new Date();\n    const delay = (60 - now.getSeconds()) * 1000 - now.getMilliseconds();\n    this.updateTimer = setTimeout(() => {\n      this.updateWeather();\n      this.scheduleUpdate();\n    }, delay);\n  }\n\n  updateWeather() {\n    const now = new Date();\n    this.updateDateTime(now);\n    this.updateWeatherData();\n    this.requestUpdate();\n  }\n\n  updateDateTime(now) {\n    this.date = now.toLocaleDateString('en-US', {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n    });\n\n    this.time = now\n      .toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true,\n      })\n      .replace(/\\s?[AP]M/, '');\n  }\n\n  updateWeatherData() {\n    if (!this.hass) return;\n\n    const weatherEntity = this.hass.states['weather.64_west_glen_ave'];\n    const aqiEntity = this.hass.states['sensor.ridgewood_air_quality_index'];\n\n    if (weatherEntity) {\n      this.temperature = `${Math.round(weatherEntity.attributes.temperature)}°`;\n      this.weatherIcon = this.getWeatherIcon(weatherEntity.state);\n    }\n\n    if (aqiEntity) {\n      this.aqi = aqiEntity.state;\n    }\n  }\n\n  getWeatherIcon(state) {\n    const iconMapping = {\n      'clear-night': 'clear-night',\n      cloudy: 'cloudy-fill',\n      fog: 'fog',\n      hail: 'hail',\n      lightning: 'thunderstorms',\n      'lightning-rainy': 'thunderstorms-rain',\n      partlycloudy: 'partly-cloudy-day',\n      pouring: 'rain',\n      rainy: 'drizzle',\n      snowy: 'snow',\n      'snowy-rainy': 'sleet',\n      sunny: 'clear-day',\n      windy: 'wind',\n      'windy-variant': 'wind',\n      exceptional: 'not-available',\n    };\n    return iconMapping[state] || 'not-available-fill';\n  }\n\n  getAqiColor(aqi) {\n    if (aqi <= 50) return '#68a03a';\n    if (aqi <= 100) return '#f9bf33';\n    if (aqi <= 150) return '#f47c06';\n    if (aqi <= 200) return '#c43828';\n    if (aqi <= 300) return '#ab1457';\n    return '#83104c';\n  }\n\n  render() {\n    return html`\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Rubik:wght@300;400;500;600&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <div class=\"weather-component\">\n        <div class=\"left-column\">\n          <div class=\"date\">${this.date}</div>\n          <div class=\"time\">${this.time}</div>\n        </div>\n        <div class=\"right-column\">\n          <div class=\"weather-info\">\n            <img\n              src=\"https://basmilius.github.io/weather-icons/production/fill/all/${this\n                .weatherIcon}.svg\"\n              class=\"weather-icon\"\n              alt=\"Weather icon\"\n            />\n            <span class=\"temperature\">${this.temperature}</span>\n          </div>\n          <div class=\"aqi\" style=\"background-color: ${this.getAqiColor(parseInt(this.aqi))}\">\n            ${this.aqi} AQI\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('weather-clock', WeatherClock);\n","import { LitElement, html } from 'https://unpkg.com/lit-element@2.4.0/lit-element.js?module';\nimport { DEFAULT_CONFIG } from './constants';\nimport { sharedStyles } from './styles/SharedStyles';\nimport './components/BackgroundRotator';\nimport './components/Controls';\nimport './components/NightMode';\nimport './components/WeatherClock';\n\nexport class GoogleCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n      screenWidth: { type: Number },\n      screenHeight: { type: Number },\n      showDebugInfo: { type: Boolean },\n      showOverlay: { type: Boolean },\n      brightness: { type: Number },\n      visualBrightness: { type: Number },\n      showBrightnessCard: { type: Boolean },\n      brightnessCardTransition: { type: String },\n      isNightMode: { type: Boolean },\n      currentTime: { type: String },\n      isInNightMode: { type: Boolean },\n      isAdjustingBrightness: { type: Boolean },\n      lastBrightnessUpdateTime: { type: Number },\n    };\n  }\n\n  static get styles() {\n    return [sharedStyles];\n  }\n\n  constructor() {\n    super();\n    this.initializeProperties();\n    this.boundUpdateScreenSize = this.updateScreenSize.bind(this);\n  }\n\n  initializeProperties() {\n    this.showDebugInfo = false;\n    this.showOverlay = false;\n    this.isNightMode = false;\n    this.showBrightnessCard = false;\n    this.brightnessCardTransition = 'none';\n    this.isAdjustingBrightness = false;\n    this.lastBrightnessUpdateTime = 0;\n    this.updateScreenSize();\n  }\n\n  setConfig(config) {\n    if (!config.image_url) {\n      throw new Error('You need to define an image_url');\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    this.showDebugInfo = this.config.show_debug;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('resize', this.boundUpdateScreenSize);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener('resize', this.boundUpdateScreenSize);\n  }\n\n  updateScreenSize() {\n    const pixelRatio = window.devicePixelRatio || 1;\n    this.screenWidth = Math.round(window.innerWidth * pixelRatio);\n    this.screenHeight = Math.round(window.innerHeight * pixelRatio);\n  }\n\n  async handleBrightnessChange(newBrightness) {\n    await this.controls.updateBrightnessValue(newBrightness);\n  }\n\n  handleOverlayToggle(show) {\n    this.showOverlay = show;\n    this.requestUpdate();\n  }\n\n  handleBrightnessCardToggle(show) {\n    this.showBrightnessCard = show;\n    this.requestUpdate();\n  }\n\n  handleNightModeChange(isNightMode) {\n    this.isNightMode = isNightMode;\n    this.requestUpdate();\n  }\n\n  handleDebugToggle() {\n    this.showDebugInfo = !this.showDebugInfo;\n    this.requestUpdate();\n  }\n\n  render() {\n    if (this.isNightMode) {\n      return html` <night-mode .currentTime=${this.currentTime}></night-mode> `;\n    }\n\n    return html`\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Rubik:wght@300;400&display=swap\"\n        rel=\"stylesheet\"\n      />\n\n      <background-rotator\n        .hass=${this.hass}\n        .config=${this.config}\n        .screenWidth=${this.screenWidth}\n        .screenHeight=${this.screenHeight}\n        .showDebugInfo=${this.showDebugInfo}\n      ></background-rotator>\n\n      <weather-clock .hass=${this.hass}></weather-clock>\n\n      <controls\n        .hass=${this.hass}\n        .showOverlay=${this.showOverlay}\n        .showBrightnessCard=${this.showBrightnessCard}\n        .brightnessCardTransition=${this.brightnessCardTransition}\n        .brightness=${this.brightness}\n        .visualBrightness=${this.visualBrightness}\n        @brightnessChange=${(e) => this.handleBrightnessChange(e.detail)}\n        @overlayToggle=${(e) => this.handleOverlayToggle(e.detail)}\n        @brightnessCardToggle=${(e) => this.handleBrightnessCardToggle(e.detail)}\n        @debugToggle=${() => this.handleDebugToggle()}\n      ></controls>\n    `;\n  }\n}\n\ncustomElements.define('google-card', GoogleCard);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: 'google-card',\n  name: 'Google Card',\n  description: 'A Google Nest Hub-inspired card for Home Assistant',\n  preview: true,\n  documentationURL: 'https://github.com/liamtw22/google-card',\n});\n"],"names":["DEFAULT_CONFIG","image_url","display_time","crossfade_time","image_fit","image_list_update_interval","image_order","show_debug","sensor_update_delay","IMAGE_SOURCE_TYPES","sharedStyles","css","backgroundRotatorStyles","customElements","define","LitElement","properties","hass","type","Object","config","screenWidth","Number","screenHeight","showDebugInfo","Boolean","currentImageIndex","imageList","Array","imageA","String","imageB","activeImage","preloadedImage","error","debugInfo","isTransitioning","styles","constructor","super","this","initializeProperties","connectedCallback","startImageRotation","startImageListUpdates","disconnectedCallback","clearTimers","clearInterval","imageUpdateInterval","imageListUpdateInterval","updateImageList","setInterval","updateImage","getImageSourceType","startsWith","includes","getImageUrl","timestamp_ms","Date","now","timestamp","Math","floor","replace","requestUpdate","newImageList","fetchImageList","sort","random","message","getImagesFromMediaSource","getImagesFromUnsplashAPI","getImagesFromImmichAPI","mediaContentId","callWS","media_content_id","children","filter","child","media_class","map","console","response","fetch","json","image","urls","regular","apiUrl","headers","immich_api_key","imagePromises","async","albumResponse","album","id","assets","asset","Promise","all","flat","preloadImage","url","resolve","reject","img","Image","onload","onerror","Error","src","preloadNextImage","nextImageToPreload","length","getNextImage","newImage","transitionToNewImage","updateDebugInfo","setTimeout","renderBackgroundImages","imageAOpacity","imageBOpacity","html","renderDebugInfo","window","devicePixelRatio","JSON","stringify","render","controlsStyles","showOverlay","showBrightnessCard","brightnessCardTransition","brightness","visualBrightness","isAdjustingBrightness","touchStartY","lastBrightnessUpdateTime","setupEventListeners","addEventListener","handleTouchStart","bind","handleTouchMove","handleTouchEnd","clearAllTimers","clearOverlayDismissTimer","clearBrightnessCardDismissTimer","brightnessUpdateTimer","clearTimeout","brightnessStabilizeTimer","longPressTimer","event","preventDefault","touches","clientY","deltaY","changedTouches","dispatchEvent","CustomEvent","detail","startOverlayDismissTimer","dismissBrightnessCard","dismissOverlay","overlayDismissTimer","startBrightnessCardDismissTimer","brightnessCardDismissTimer","toggleBrightnessCard","handleBrightnessChange","e","clickedDot","target","closest","newBrightness","parseInt","dataset","value","updateBrightnessValue","handleBrightnessDrag","rect","shadowRoot","querySelector","getBoundingClientRect","x","clientX","relativeX","max","min","left","width","newValue","round","setBrightness","internalValue","callService","data","command","handleSettingsIconTouchStart","handleSettingsIconTouchEnd","getBrightnessDisplayValue","renderOverlay","renderBrightnessCard","brightnessDisplayValue","buttons","nightModeStyles","currentTime","isInNightMode","previousBrightness","timeUpdateInterval","updateTime","startTimeUpdates","enterNightMode","toLocaleTimeString","hour","minute","hour12","toggleAutoBrightness","exitNightMode","enabled","updated","changedProperties","has","checkLightSensor","states","lightSensor","shouldBeInNightMode","state","weatherClockStyles","date","time","temperature","weatherIcon","aqi","resetProperties","updateTimer","updateWeather","scheduleUpdate","delay","getSeconds","getMilliseconds","updateDateTime","updateWeatherData","toLocaleDateString","weekday","month","day","weatherEntity","aqiEntity","attributes","getWeatherIcon","cloudy","fog","hail","lightning","partlycloudy","pouring","rainy","snowy","sunny","windy","exceptional","getAqiColor","GoogleCard","isNightMode","boundUpdateScreenSize","updateScreenSize","setConfig","removeEventListener","pixelRatio","innerWidth","innerHeight","controls","handleOverlayToggle","show","handleBrightnessCardToggle","handleNightModeChange","handleDebugToggle","customCards","push","name","description","preview","documentationURL"],"mappings":"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"}